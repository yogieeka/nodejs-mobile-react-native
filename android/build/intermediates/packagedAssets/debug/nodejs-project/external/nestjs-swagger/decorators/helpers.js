"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const lodash_1 = require("lodash");
const constants_1 = require("../constants");
exports.createMethodDecorator = (metakey, metadata) => {
    return (_target, _key, descriptor) => {
        Reflect.defineMetadata(metakey, metadata, descriptor.value);
        return descriptor;
    };
};
exports.createClassDecorator = (metakey, metadata) => {
    return target => {
        Reflect.defineMetadata(metakey, metadata, target);
        return target;
    };
};
exports.createPropertyDecorator = (metakey, metadata) => {
    return (target, propertyKey) => {
        const properties = Reflect.getMetadata(constants_1.DECORATORS.API_MODEL_PROPERTIES_ARRAY, target) || [];
        Reflect.defineMetadata(constants_1.DECORATORS.API_MODEL_PROPERTIES_ARRAY, [...properties, `:${propertyKey}`], target);
        Reflect.defineMetadata(metakey, Object.assign({ type: Reflect.getMetadata('design:type', target, propertyKey) }, lodash_1.pickBy(metadata, lodash_1.negate(lodash_1.isUndefined))), target, propertyKey);
    };
};
exports.createMixedDecorator = (metakey, metadata) => {
    return (target, _key, descriptor) => {
        if (descriptor) {
            Reflect.defineMetadata(metakey, metadata, descriptor.value);
            return descriptor;
        }
        Reflect.defineMetadata(metakey, metadata, target);
        return target;
    };
};
exports.createParamDecorator = (metadata, initial) => {
    return (_target, _key, descriptor) => {
        const parameters = Reflect.getMetadata(constants_1.DECORATORS.API_PARAMETERS, descriptor.value) || [];
        Reflect.defineMetadata(constants_1.DECORATORS.API_PARAMETERS, [
            ...parameters,
            Object.assign({}, initial, lodash_1.pickBy(metadata, lodash_1.negate(lodash_1.isUndefined)))
        ], descriptor.value);
        return descriptor;
    };
};
exports.createMultipleParamDecorator = (multiMetadata, initial) => {
    return (_target, _key, descriptor) => {
        const parameters = Reflect.getMetadata(constants_1.DECORATORS.API_PARAMETERS, descriptor.value) || [];
        Reflect.defineMetadata(constants_1.DECORATORS.API_PARAMETERS, [
            ...parameters,
            ...multiMetadata.map(metadata => (Object.assign({}, initial, lodash_1.pickBy(metadata, lodash_1.negate(lodash_1.isUndefined)))))
        ], descriptor.value);
        return descriptor;
    };
};
exports.getTypeIsArrayTuple = (input, isArrayFlag) => {
    if (!input) {
        return [input, isArrayFlag];
    }
    if (isArrayFlag) {
        return [input, isArrayFlag];
    }
    const isInputArray = lodash_1.isArray(input);
    const type = isInputArray ? input[0] : input;
    return [type, isInputArray];
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVscGVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9leHRlcm5hbC9uZXN0anMtc3dhZ2dlci9kZWNvcmF0b3JzL2hlbHBlcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxtQ0FBOEQ7QUFDOUQsNENBQTBDO0FBRTdCLFFBQUEscUJBQXFCLEdBQUcsQ0FBQyxPQUFPLEVBQUUsUUFBUSxFQUFtQixFQUFFO0lBQzFFLE9BQU8sQ0FBQyxPQUFPLEVBQUUsSUFBSSxFQUFFLFVBQThCLEVBQUUsRUFBRTtRQUN2RCxPQUFPLENBQUMsY0FBYyxDQUFDLE9BQU8sRUFBRSxRQUFRLEVBQUUsVUFBVSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzVELE9BQU8sVUFBVSxDQUFDO0lBQ3BCLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQztBQUVXLFFBQUEsb0JBQW9CLEdBQUcsQ0FBQyxPQUFPLEVBQUUsUUFBUSxFQUFrQixFQUFFO0lBQ3hFLE9BQU8sTUFBTSxDQUFDLEVBQUU7UUFDZCxPQUFPLENBQUMsY0FBYyxDQUFDLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDbEQsT0FBTyxNQUFNLENBQUM7SUFDaEIsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFDO0FBRVcsUUFBQSx1QkFBdUIsR0FBRyxDQUNyQyxPQUFPLEVBQ1AsUUFBUSxFQUNXLEVBQUU7SUFDckIsT0FBTyxDQUFDLE1BQWMsRUFBRSxXQUFtQixFQUFFLEVBQUU7UUFDN0MsTUFBTSxVQUFVLEdBQ2QsT0FBTyxDQUFDLFdBQVcsQ0FBQyxzQkFBVSxDQUFDLDBCQUEwQixFQUFFLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUMzRSxPQUFPLENBQUMsY0FBYyxDQUNwQixzQkFBVSxDQUFDLDBCQUEwQixFQUNyQyxDQUFDLEdBQUcsVUFBVSxFQUFFLElBQUksV0FBVyxFQUFFLENBQUMsRUFDbEMsTUFBTSxDQUNQLENBQUM7UUFDRixPQUFP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